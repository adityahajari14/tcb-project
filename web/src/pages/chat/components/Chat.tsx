import { useState } from 'react'
import { sendChatMessage } from '../../../services/api'

interface Message {
  role: 'user' | 'assistant';
  content: string;
}

const Chat = () => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  const handleSend = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim() || isLoading) return;

    const userMessage = input.trim();
    setInput('');
    setIsLoading(true);

    setMessages(prev => [...prev, { role: 'user', content: userMessage }]);
    const aiIndex = messages.length + 1;
    setMessages(prev => [...prev, { role: 'assistant', content: '' }]);

    await sendChatMessage(
      userMessage,
      (text) => {
        setMessages(prev => {
          const updated = [...prev];
          updated[aiIndex] = { role: 'assistant', content: updated[aiIndex].content + text };
          return updated;
        });
      },
      (error) => {
        setMessages(prev => {
          const updated = [...prev];
          updated[aiIndex] = { role: 'assistant', content: `Error: ${error}` };
          return updated;
        });
      }
    );

    setIsLoading(false);
  };

  return (
    <>
    <div className='w-full min-h-screen flex flex-col'>
      <div className='flex-1 z-10 overflow-y-auto px-4 pb-32'>
        {messages.length === 0 ? (
          <div className='h-full flex flex-col justify-center items-center gap-4'>
            <img src="logo.svg" alt="" className='w-10'/>
            <h2 className='text-5xl font-semibold'>Hey, How can I help you!</h2>
          </div>
        ) : (
          <div className='max-w-3xl mx-auto pt-10 space-y-4'>
            {messages.map((msg, i) => (
              <div key={i} className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}>
                <div className={`max-w-[80%] p-4 rounded-2xl ${
                  msg.role === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'
                }`}>
                  <p className='whitespace-pre-wrap break-words'>{msg.content}</p>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      <div className='fixed z-10 bottom-0 left-0 w-full py-6 bg-gradient-to-t from-white via-white to-transparent z-50'>
        <form onSubmit={handleSend} className='max-w-2xl mx-auto flex items-center gap-2 px-4 py-3 bg-white border-2 border-gray-500 rounded-2xl'>
          <input 
            type="text" 
            placeholder='Type your message...' 
            className='flex-1 text-lg outline-none'
            value={input}
            onChange={(e) => setInput(e.target.value)}
            disabled={isLoading}
          />
          <button 
            type="submit"
            disabled={isLoading || !input.trim()}
            className='p-2 rounded-full text-gray-600 hover:bg-gray-100 disabled:opacity-50'
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="20" height="20" fill="currentColor">
              <path d="M0 0 C1.72614716 0.82255408 3.45338433 1.64282419 5.18164062 2.4609375 C8.76664607 4.16015288 12.34679073 5.86903924 15.92382812 7.58496094 C23.3592238 11.1426489 30.84968342 14.57956336 38.34069824 18.01812744 C42.39642483 19.88139445 46.44798383 21.7536815 50.5 23.625 C52.12498035 24.37504257 53.74998035 25.12504258 55.375 25.875 C135.8125 63 216.25 100.125 379.56211853 175.49983215 C381.18838176 176.2504097 382.81465334 177.00096917 384.44093323 177.75151062 C388.48417416 179.61752652 392.52727321 181.48384855 396.57006836 183.35083008 C404.11167481 186.83318899 411.65461594 190.31256066 419.2024231 193.78146362 C422.72597906 195.40107882 426.24875858 197.02237893 429.77148438 198.64379883 C431.43369714 199.4083081 433.09628023 200.17201284 434.75927734 200.93481445 C439.24216802 202.99119899 443.7188423 205.05980109 448.18341064 207.15570068 C449.55963882 207.80119759 450.93736929 208.44350134 452.31658936 209.08258057 C454.25797673 209.98592407 456.19035904 210.90617896 458.12109375 211.83203125 C459.21220459 212.34870361 460.30331543 212.86537598 461.42749023 213.39770508 C465.59922525 215.95068711 468.51025212 219.54395533 470.25 224.125 C471.02637692 229.84567202 471.14969723 235.43677257 468.25 240.5625 C462.44075332 248.05476074 452.81011065 251.30113622 444.37548828 255.05395508 C440.68215605 256.69784003 436.99773603 258.36150128 433.3125 260.0234375 C432.55549805 260.36433411 431.79849609 260.70523071 431.01855469 261.05645752 C423.39064381 264.49825523 415.81810217 268.05409848 408.25 271.625 C396.76943501 277.03632749 385.24127764 282.33212531 373.67724609 287.5625 C363.49612735 292.16955821 353.35903904 296.86196811 343.25 301.625 C331.76861962 307.03463198 320.24130765 312.33211173 308.67724609 317.5625 C298.49612735 322.16955821 288.35903904 326.86196811 278.25 331.625 C266.76861962 337.03463198 255.24130765 342.33211173 243.67724609 347.5625 C233.49612735 352.16955821 223.35903904 356.86196811 213.25 361.625 C201.76861962 367.03463198 190.24130765 372.33211173 178.67724609 377.5625 C168.49612735 382.16955821 158.35903904 386.86196811 148.25 391.625 C136.76861962 397.03463198 125.24130765 402.33211173 113.67724609 407.5625 C103.49612735 412.16955821 93.35903904 416.86196811 83.25 421.625 C71.77272166 427.03269924 60.25049604 432.3306137 48.68933105 437.55645752 C38.93578669 441.96681874 29.22806249 446.46476341 19.54815674 451.03439331 C13.79035183 453.74891942 8.02112339 456.43893393 2.25 459.125 C1.17073242 459.62918457 0.09146484 460.13336914 -1.02050781 460.65283203 C-3.87938416 461.97791161 -6.74877521 463.27560205 -9.625 464.5625 C-10.4200293 464.9342334 -11.21505859 465.3059668 -12.03417969 465.68896484 C-17.98452266 468.29559896 -24.42298658 469.60644847 -30.7487793 467.44067383 C-35.61809909 464.91523445 -39.30294766 461.01910469 -41.75 456.125 C-42.82317072 447.84451226 -42.06954765 442.03142842 -37.18359375 435.23828125 C-36.38050781 434.21089844 -35.57742187 433.18351562 -34.75 432.125 C-33.71972654 430.78540656 -32.68980501 429.44554241 -31.66015625 428.10546875 C-29.28570756 425.03261264 -26.89096108 421.97659371 -24.48828125 418.92578125 C-20.85440679 414.28997821 -17.34996581 409.56808169 -13.875 404.8125 C-8.90967365 398.02321905 -3.86334364 391.30351518 1.25 384.625 C6.3166281 378.00561726 11.32435459 371.34996793 16.25 364.625 C21.8366242 356.99759983 27.54276338 349.46855435 33.2890625 341.9609375 C37.67064326 336.22597273 41.98542958 330.44740437 46.25 324.625 C51.8366242 316.99759983 57.54276338 309.46855435 63.2890625 301.9609375 C67.67064326 296.22597273 71.98542958 290.44740437 76.25 284.625 C81.82735926 277.01024924 87.52368118 269.4934231 93.26049805 261.99829102 C99.57092329 253.73861645 105.74314437 245.38046774 111.87817383 236.98999023 C112.86861519 235.64349058 113.89821766 234.32549743 114.95092773 233.02709961 C116.53544397 231.18826795 116.53544397 231.18826795 115.828125 228.8828125 C113.57921683 224.9527898 110.83117903 221.52541011 108 218 C103.0066191 211.68575188 98.12200628 205.31407178 93.375 198.8125 C88.40995481 192.02301774 83.3633386 185.30350859 78.25 178.625 C72.59634038 171.23867991 67.03529611 163.79305268 61.5390625 156.2890625 C57.17722968 150.34828567 52.72945452 144.4774674 48.25 138.625 C42.59646605 131.23858208 37.03529806 123.79305534 31.5390625 116.2890625 C27.17722968 110.34828567 22.72945452 104.4774674 18.25 98.625 C12.59646605 91.23858208 7.03529806 83.79305534 1.5390625 76.2890625 C-2.82277363 70.34828117 -7.27074006 64.47762048 -11.75 58.625 C-42.69069637 18.1750242 -42.69069637 18.1750242 -41.75 5.125 C-40.10673625 0.3681839 -37.5592149 -2.60995866 -33.75 -5.875 C-21.4493475 -11.59452466 -11.1209175 -5.42664946 0 0 Z " transform="translate(41.75,25.875)"/>
            </svg>
          </button>
        </form>
      </div>
    </div>
    </>
  )
}

export default Chat